{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let UsuariosService = /*#__PURE__*/(() => {\n  class UsuariosService {\n    constructor() {\n      this.API_URI = 'http://localhost:3000/user';\n      this.usuarios = [];\n      this.usuarios = [{\n        \"id\": \"1\",\n        \"nombre\": \"Pedro\",\n        \"email\": \"pedro@email.net\",\n        \"password\": \"123456\",\n        \"rol\": \"admin\"\n      }, {\n        \"id\": \"2\",\n        \"nombre\": \"Juan\",\n        \"email\": \"juan@email.net\",\n        \"password\": \"123456\",\n        \"rol\": \"usuario\"\n      }, {\n        \"id\": \"3\",\n        \"nombre\": \"Hugo\",\n        \"email\": \"hugo@email.net\",\n        \"password\": \"123456\",\n        \"rol\": \"usuario\"\n      }, {\n        \"id\": \"4\",\n        \"nombre\": \"Carlos\",\n        \"email\": \"carlos@email.net\",\n        \"password\": \"123456\",\n        \"rol\": \"admin\"\n      }, {\n        \"id\": \"5\",\n        \"nombre\": \"Maria\",\n        \"email\": \"maria@email.net\",\n        \"password\": \"123456\",\n        \"rol\": \"admin\"\n      }];\n    }\n\n    listarUsuarios() {\n      //para expandir/especializar las variables usamos ` y no ' o \"\n      //Las variables salen pintadas de otro color diferente del de texto\n      //return this.http.get(`${this.API_URI}/list`);\n      //si no funciona usar \n      //return this.http.get(this.API_URI+'/list');\n      return this.usuarios;\n    }\n\n    buscarUsuario(id) {//return this.http.get(`${this.API_URI}/find/${id}`);\n    }\n\n    validarUsuario(email, password) {\n      const found = this.usuarios.find(user => user.email === email && user.password === password);\n      return !!found;\n    }\n\n    identificarTipoUsuario(email) {\n      const findUser = this.usuarios.find(user => user.email === email);\n      return findUser;\n    }\n\n    guardarUsuarios(usuariosGuardar) {\n      //Recibe un array de usuarios y lo guarda. Sobreescribe el contenido previo.\n      // this.usuarios = usuariosGuardar;\n      //console.log(this.usuarios);\n      if (Array.isArray(usuariosGuardar)) {\n        this.usuarios = usuariosGuardar;\n      }\n    } // guardarUsuariosLocal() {\n    //   //Guarda los usuarios del objeto en el LocalStorage\n    //   localStorage.setItem(\"Usuarios\", JSON.stringify(this.usuarios));\n    // }\n\n\n    guardarUsuariosLocal() {\n      //Guarda los usuarios del objeto en el LocalStorage\n      localStorage.setItem(\"Usuarios\", JSON.stringify(this.usuarios));\n    }\n\n    guardarUsuarioLogeado(email) {\n      var _a; //Guarda los usuarios del objeto en el LocalStorage\n\n\n      const findUser = this.usuarios.find(user => user.email === email);\n      const findUserRole = (_a = this.usuarios.find(user => user.email === email)) === null || _a === void 0 ? void 0 : _a.rol;\n      localStorage.setItem(\"UsuarioActual\", JSON.stringify(findUser));\n      localStorage.setItem(\"UsuarioActualRol\", findUserRole || '');\n    }\n\n    obtenerUsuarioLogeado() {\n      return localStorage.getItem('UsuarioActual');\n    }\n\n    obtenerRolUsuarioLogeado() {\n      console.log(localStorage.getItem('UsuarioActualRol'));\n      return localStorage.getItem('UsuarioActualRol');\n    } // cargarUsuariosLocal() {\n    //   //Carga los usuarios desde el objeto en el LocalStorage\n    //   this.usuarios = JSON.parse(localStorage.getItem(\"Usuarios\") || '{}');\n    // }\n\n\n    cargarUsuariosLocal() {\n      const storedUsuarios = localStorage.getItem(\"Usuarios\");\n\n      if (storedUsuarios) {\n        this.usuarios = JSON.parse(storedUsuarios);\n      }\n    }\n\n    setToken() {\n      //localStorage.setItem('token',result.token);\n      localStorage.setItem('token', 'LogInOK');\n    }\n\n    isLoggedIn() {\n      return !!localStorage.getItem('token'); //Si existe token retorna true\n      //es el equivalente de testearlo con if pero ahora en una sola linea.\n    }\n\n    logOut() {\n      localStorage.removeItem('token');\n      localStorage.removeItem('UsuarioActual');\n      localStorage.removeItem('UsuarioActualRol');\n    }\n\n  }\n\n  UsuariosService.ɵfac = function UsuariosService_Factory(t) {\n    return new (t || UsuariosService)();\n  };\n\n  UsuariosService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UsuariosService,\n    factory: UsuariosService.ɵfac,\n    providedIn: 'root'\n  });\n  return UsuariosService;\n})();","map":null,"metadata":{},"sourceType":"module"}